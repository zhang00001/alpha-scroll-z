{"version":3,"sources":["../../src/pipes/order-by.ts"],"names":[],"mappings":"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","file":"order-by.js","sourceRoot":"","sourcesContent":["import { Injectable, Pipe, PipeTransform } from '@angular/core';\nimport * as _ from 'lodash';\n\n\n\nexport class OrderBy implements PipeTransform {\n  transform(input: any, orderConfigs: string | Array<string> = '+'): any {\n    if (!Array.isArray(input)) {\n      return input;\n    }\n\n    if (this.isSingle(orderConfigs)) {\n      let orderConfig: string = !Array.isArray(orderConfigs) ? orderConfigs : orderConfigs[0];\n      let config = this.parseProperty(orderConfig);\n\n      // Basic array\n      if (config.property === '') {\n        return _.orderBy(input, [], config.order);\n      }\n\n      return _.orderBy(input, [config.property], [config.order]);\n    }\n\n    let configs = this.parseProperties(<string[]>orderConfigs);\n    return _.orderBy(input, configs.properties, configs.orders);\n  }\n\n  private isSingle(orderConfigs: any): boolean {\n    return !Array.isArray(orderConfigs) || (Array.isArray(orderConfigs) && orderConfigs.length === 1);\n  }\n\n  private parseProperty(config: string): { order: string, property: string } {\n    let orderChar = config.substr(0, 1);\n    let isDesc = orderChar === '-';\n    let hasOrder = orderChar || orderChar === '+';\n    return { order: isDesc ? 'desc' : 'asc', property: hasOrder ? config.substr(1) : config };\n  }\n\n  private parseProperties(configs: Array<string>): { orders: Array<string>, properties: Array<string> } {\n    let result = { orders: [], properties: [] };\n    configs.forEach(configStr => {\n      let config = this.parseProperty(configStr);\n      result.orders.push(config.order);\n      result.properties.push(config.property);\n    });\n    return result;\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Pipe, args: [{\n  name: 'orderBy',\n  pure: true\n}, ] },\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}